{"version":3,"sources":["icons/Search.js","components/SearchBar.jsx","components/Profiles.jsx","App.jsx","registerServiceWorker.js","index.js"],"names":["Search","props","react_default","a","createElement","Object","assign","height","viewBox","width","fill","d","SearchBar","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","query","openQwant","bind","assertThisInitialized","handleKeyPress","inputRef","React","createRef","current","focus","window","open","e","key","onSearch","_this2","downshift_esm","onStateChange","_ref","inputValue","setState","selectedItem","render","_ref2","getInputProps","getItemProps","isOpen","highlightedIndex","className","onKeyUp","ref","placeholder","icons_Search","onClick","items","filter","i","includes","map","item","index","style","backgroundColor","fontWeight","Component","Profiles","profiles","profile","id","src","image","alt","username","APP","name","description","App","link","masq","handleClickProfile","Masq","init","getProfiles","requestMasqAccess","requestMasqAccessDone","put","console","error","_context2","t0","message","db","currentProfile","setProfile","_getDB","exchangeDataHyperdbKeys","exchangeDataHyperdbKeysDone","list","err","nodes","_this$state","length","target","rel","href","components_Profiles","SearchBar_SearchBar","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","ReactDOM","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c328ead1.chunk.js","sourcesContent":["import React from 'react'\n\nconst Search = props => (\n  <svg height={24} viewBox='0 0 24 24' width={24} {...props}>\n    <path fill='currentColor' d='M15.5 14h-.79l-.28-.27A6.471 6.471 0 0 0 16 9.5 6.5 6.5 0 1 0 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z' />\n    <path d='M0 0h24v24H0z' fill='none' />\n  </svg>\n)\n\nexport default Search\n","import React from 'react'\nimport Downshift from 'downshift'\n\nimport Search from '../icons/Search'\n\nexport default class SearchBar extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      query: ''\n    }\n    this.openQwant = this.openQwant.bind(this)\n    this.handleKeyPress = this.handleKeyPress.bind(this)\n    this.inputRef = React.createRef()\n  }\n\n  componentDidMount () {\n    this.inputRef.current.focus()\n  }\n\n  openQwant () {\n    window.open('https://www.qwant.com/?q=' + this.state.query)\n  }\n\n  handleKeyPress (e) {\n    if (e.key !== 'Enter') { return }\n\n    if (this.props.onSearch) {\n      this.props.onSearch(this.state.query)\n    }\n    this.openQwant()\n  }\n\n  render () {\n    return (\n      <Downshift\n        onStateChange={({ inputValue }) => {\n          return inputValue && this.setState({ query: inputValue })\n        }}\n        selectedItem={this.state.query}\n        render={({\n          getInputProps,\n          getItemProps,\n          isOpen,\n          inputValue,\n          highlightedIndex,\n          selectedItem\n        }) => (\n          <div className='SearchBar'>\n            <div>\n              <input {...getInputProps({\n                onKeyUp: this.handleKeyPress\n              })} className='input' ref={this.inputRef} placeholder='What are you looking for?' />\n              <Search onClick={this.openQwant} className='icon' />\n            </div>\n\n            {isOpen &&\n              <div className='downshift'>\n                {this.props.items\n                  .filter(i => !inputValue || i.includes(inputValue))\n                  .map((item, index) => (\n                    <div\n                      className='downshiftRow'\n                      {...getItemProps({\n                        key: index,\n                        index,\n                        item,\n                        style: {\n                          backgroundColor: highlightedIndex === index ? 'lightgray' : 'white',\n                          fontWeight: selectedItem === item ? 'bold' : 'normal'\n                        }\n                      })}\n                    >\n                      {item}\n                    </div>\n                  ))}\n              </div>\n            }\n          </div>\n        )}\n      />\n    )\n  }\n}\n","import React from 'react'\n\nconst Profiles = ({ profiles, onClick }) => (\n  <div className='Profiles'>\n    {profiles.map(profile => (\n      <span className='profile' key={profile.id} onClick={() => onClick(profile)}>\n        <img src={profile.image} alt={profile.username} />\n        <span key={profile.id}>{profile.username}</span>\n      </span>\n    ))}\n  </div>\n)\n\nexport default Profiles\n","import React, { Component } from 'react'\nimport Masq from 'masq-lib'\n\nimport SearchBar from './components/SearchBar'\nimport Profiles from './components/Profiles'\n\nimport './App.css'\n\nconst APP = {\n  name: 'Qwant Search',\n  description: 'Qwant search engine',\n  image: 'https://qwant.com/img/v4/home-banner.svg?1542966874062'\n}\n\n// function ConnectionStatus ({ isConnected }) {\n//   return isConnected\n//     ? <p style={{ color: 'green' }}>Connected to Masq</p>\n//     : <p style={{ color: 'red' }}>Disconnected from Masq</p>\n// }\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      link: '#',\n      items: [],\n      profiles: []\n    }\n\n    this.masq = null\n    this.onSearch = this.onSearch.bind(this)\n    this.handleClickProfile = this.handleClickProfile.bind(this)\n  }\n\n  async componentDidMount () {\n    this.masq = new Masq('Search')\n    await this.masq.init()\n\n    try {\n      const profiles = await this.masq.getProfiles()\n      this.setState({ profiles })\n    } catch (e) {\n      // We need to link with masq for the first time\n\n      // Retrieve link to request an access to Masq\n      const { link } = await this.masq.requestMasqAccess()\n      this.setState({ link })\n      // Waith for the operation to complete\n      await this.masq.requestMasqAccessDone()\n\n      // We can now retrieve the profiles\n      const profiles = await this.masq.getProfiles()\n      this.setState({ profiles })\n    }\n  }\n\n  async onSearch (query) {\n    const items = [...this.state.items, query]\n\n    try {\n      // We create one key in DB per search item instead\n      // of updating an array\n      await this.masq.put(query, 'ok')\n      this.setState({ items })\n    } catch (e) {\n      console.error(e.message)\n    }\n  }\n\n  async handleClickProfile (profile) {\n    let db = null\n    this.setState({ currentProfile: profile })\n\n    await this.masq.setProfile(profile.id)\n\n    try {\n      db = this.masq._getDB()\n    } catch (e) {\n      // Retrieve link to create the app\n      const { link } = await this.masq.exchangeDataHyperdbKeys(APP)\n      window.open(link, '_blank')\n      // Wait for the operation to complete\n      await this.masq.exchangeDataHyperdbKeysDone(APP)\n      db = this.masq._getDB()\n    }\n\n    // Retrieve existing keys, in order to\n    // retrieve items from the values stored in the DB\n    db.list('', (err, list) => {\n      if (err) console.error(err)\n      const items = list.map(nodes => nodes[0].key)\n      this.setState({ items })\n    })\n  }\n\n  render () {\n    const { profiles, items, currentProfile, link } = this.state\n    return (\n      <div className='App'>\n        {!profiles.length && <a target='_blank' rel=\"noopener noreferrer\" href={link}>connect to masq</a>}\n        <Profiles profiles={profiles} onClick={this.handleClickProfile} />\n        {currentProfile && <p>Selected user: {currentProfile.username}</p>}\n        {currentProfile && <SearchBar onSearch={this.onSearch} items={items} />}\n      </div>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register () {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new window.URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  window.fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\n\nimport 'typeface-roboto'\n\nReactDOM.render(<App />, document.getElementById('root'))\nregisterServiceWorker()\n"],"sourceRoot":""}